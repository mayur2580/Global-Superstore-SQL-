
------------------------------------------------------- Subquery in WHERE

USE new_schema_2;


SELECT * FROM Fact;

SELECT * FROM Customer;

SELECT * FROM Product;

SELECT * FROM Location;

SELECT * FROM Regional_head;

SELECT * FROM Returns;

-- Q) Show all data of Fact table for the returned orders
SELECT 
    *
FROM
    fact
WHERE
    Order_ID IN (SELECT 
            Order_ID
        FROM
            returns
        WHERE
            Returned = 'yes');
    

-- Q) Show all data of Fact table for the orders from 'India'
SELECT *
FROM Fact 
where location_id in (
	select location_id
    from location
    where country = "india"
    );

-- Q) Show all data of Fact table for the products of 'Phones' sub-categories
select * 
from fact 
where Product_ID in (
	select Product_ID 
    from product 
    where  Sub_Category = "phones" 
    );
		
-- Q) Show all data of Fact table for the orders placed by customer with first name 'John'
select * 
from fact 
where Customer_ID in (
		select Customer_ID
        from customer
        where Customer_Name like "john%"
        );
            
-- Q) Find total sales and total profit generated in city 'Pune'
select sum(sales), sum(profit)
from fact 
where Location_ID in (
		select Location_ID 
        from location 
        where city = "pune"
        );

-- Q) Find total sales and total profit generated by the non-returned orders
select sum(Sales) as total_sales , sum(Profit) as total_profit
from fact
where Order_ID in (
	select Order_ID
    from returns
    where Returned = "no"
    );

-- Q) Show all data of Fact table for the Returned orders from 'India'



-- Q) Show all data of Fact table under the Regional Head 'Larry Hughes'




-- Q) Find the amount of returned sales under the Regional Head 'Nora Preis'













-------------------------------------------------------------- Subquery in FROM

-- Q) For How many quarters sales exceeds 1000000
SELECT COUNT(*) AS 'No. of Quarters'
 FROM (
 SELECT DATEPART(QUARTER, F.Order Date) AS 'Quarter', SUM(F.Sales) AS 'Total Sales'
 FROM Fact F
 GROUP BY DATEPART(QUARTER, F.Order Date)
 HAVING SUM(F.Sales) > 1000000
 ) AS SubTable;

--




-- Q) Find number of cities with total sales more than 50000
SELECT COUNT(*) AS 'No. of Cities'
 FROM (
 SELECT F.Location_ID, SUM(F.Sales) 'Total Sales'
 FROM Fact F
 GROUP BY F.Location_ID
 HAVING SUM(F.Sales) > 50000
 ) AS SubTable ;

--

-- Q) Find country wise number of cities with sales more than 10000
SELECT 
    COUNT(*) AS 'country_wise_no._of_cities'
FROM
    (SELECT 
        f.Location_ID, SUM(f.sales)
    FROM
        fact AS f
    WHERE
        f.Location_ID IN (SELECT 
                l.Location_ID
            FROM
                location AS l)
    GROUP BY f.Location_ID
    HAVING SUM(f.sales) > 10000) AS SubTable;

-- Q) Find average sales per city
use new_schema ;
select city, avg(sales)
from orders
group by city;

-- Q) Find average sales per city for each country
select country, city, avg(sales) as  avg_sales_per_city
from
		(select country, city , avg(sales) as  avg_sales_per_city
		from orders
		group by country, city) as avg_sales
group by country, city
order by country
;

-- Q) Find average monthly sales
select year(order_date) ,month(order_date),avg(total_sales) as avg_sales
from
			(select year(order_date) ,month(order_date) as month, sum(sales) as Total_sales
			from orders
			group by month(order_date), month(order_date) 
			order by month asc) as T
group by year(order_date) ,month(order_date) ;


-- Q) Find average monthly sales for each year
select avg(sum_sales), year(order_date)
from
		(select year(order_date), month(order_date), sum(sales) as sum_sales
		from orders 
		group by year(order_date), month(order_date)
		order by year(order_date) desc) as T
group by year(order_date); 

--------------------------------------------------------  Subquery in SELECT

-- Q) Find percentage contribution in sales by different sub-categories
SELECT 
    Sub_Category,
    ROUND(SUM(sales), 2) AS total_sales,
    ROUND((SUM(sales) / (SELECT 
                    SUM(sales)
                FROM
                    orders) * 100),
            2) AS '%_contribution'
FROM
    orders
GROUP BY Sub_Category;

-- Q) Show each country sales is how much percent of that of USA sales
SELECT 
    country,
    SUM(sales) AS total_sales,
    100 * SUM(sales) / (SELECT 
            SUM(sales)
        FROM
            orders
        WHERE
            country = 'united states') AS '%_contribution'
FROM
    orders
GROUP BY country;


-- Q) Print USA sales, Overseas sales, Total sales in a row. 
SELECT 
    (SELECT 
            SUM(Sales)
        FROM
            Orders
        WHERE
            Country = 'United States') 'USA sales',
    (SELECT 
            SUM(Sales)
        FROM
            Orders
        WHERE
            Country <> 'United States') 'Overseas sales',
    (SELECT 
            SUM(Sales)
        FROM
            Orders) 'Total sales'
;

